<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui" template="/templates/template.xhtml">
	<ui:define name="metadada">
		<f:metadata>
			<f:viewParam name="produtoAcao" value="#{MBProduto.acao}" />
			<f:viewParam name="produtoAcao" value="#{MBProduto.codigo}" />
			<f:event listener="#{MBProduto.carregarCadastro}"
				type="preRenderView"></f:event>
		</f:metadata>
	</ui:define>

	<ui:define name="conteudo">
		<h:form id="FormularioProdutoCadrastro">
			<p:toolbar>
				<f:facet name="left">
					<h:outputText value="Produtos" />
				</f:facet>
			</p:toolbar>
			<h:panelGrid columns="2" id="PainelProdutoCadrastro">
				<p:outputLabel value="Codigo" />
				<p:inputText maxlength="10" size="30" readonly="true"
					value="#{MBProduto.produto.codigo}" />
				<p:outputLabel value="Descricao" />
				<p:inputText maxlength="50" size="30"
					value="#{MBProduto.produto.descricao}"
					readonly="#{MBProduto.acao == 'Excluir'}">
					<!-- Este campo eh carregado com o nome do produto (com getDescricao) e fica apenas de leitura caso o evento/metodo escutado escutado la do Bean seja excluir -->
					<f:validateBean />
				</p:inputText>
				<p:outputLabel value="Preco" />
				<p:inputText maxlength="12" size="30"
					value="#{MBProduto.produto.preco}"
					readonly="#{MBProduto.acao == 'Excluir'}">
					<!-- Este campo eh carregado com o nome do produto (com getPreco) e fica apenas de leitura caso o evento/metodo escutado escutado la do Bean seja excluir -->
					<f:validateBean />
				</p:inputText>
				<p:outputLabel value="Quantidade" />
				<p:inputText maxlength="8" size="30"
					value="#{MBProduto.produto.quantidade}"
					readonly="#{MBProduto.acao == 'Excluir'}">
					<!-- Este campo eh carregado com o nome do produto (com getQuantidade) e fica apenas de leitura caso o evento/metodo escutado escutado la do Bean seja excluir -->
					<f:validateBean />
				</p:inputText>

				<p:outputLabel value="Fornecedor" />
				<p:selectOneMenu value="#{MBProduto.produto.fornecedor}"
					readonly="#{MBProduto.acao == 'Excluir'}" converter="fornecedorConverter" >
					<!-- Este campo eh carregado com o nome do Fornecedor (com getFornecedor) e fica apenas de leitura caso o evento/metodo escutado escutado la do Bean seja excluir -->
					<f:selectItem itemValue="" itemLabel="Seleccione um Fornecedor" />
					<f:selectItems value="#{MBProduto.fornecedores}" var="fornecedor" itemValue="#{fornecedor}" itemLabel="#{fornecedor.descricao}"  />
					<f:validateBean />
				</p:selectOneMenu>

			</h:panelGrid>
			<h:panelGrid columns="5">
				<p:button value="Adicionar Novo" actionListener="#{MBProduto.novo}"
					update=":FormularioProdutoCadrastro:PainelProdutoCadrastro"
					rendered="#{MBProduto.acao == 'Novo'}" />
				<!-- Este botao escuta o Evento/metodo de novo la do Bean, renderiza este botao apenas se accao for NOVO e actualiza painel quando eh clicado -->
				<p:commandButton value="Salvar" actionListener="#{MBProduto.salvar}"
					update=":msgGlobal :FormularioProdutoCadrastro:PainelProdutoCadrastro" rendered="#{MBProduto.acao == 'Novo'}"   />
				<!-- Este botao escuta o Evento/metodo de salvar la do Bean, renderiza este botao apenas se accao for NOVO e actualiza painel e mostra a mesagem quando eh clicado -->
				<p:commandButton value="Excluir"
					actionListener="#{MBProduto.excluir}"
					update=":msgGlobal :FormularioProdutoCadrastro:PainelProdutoCadrastro"
					rendered="#{MBProduto.acao == 'Excluir'}" />
				<p:commandButton value="Actualizar"
					actionListener="#{MBProduto.editar}"
					update=":msgGlobal :FormularioProdutoCadrastro:PainelProdutoCadrastro"
					rendered="#{MBProduto.acao == 'Editar'}" />
				<p:button value="Voltar" outcome="/pages/produtoPesquisa.xhtml" />
			</h:panelGrid>
		</h:form>

	</ui:define>

</ui:composition>